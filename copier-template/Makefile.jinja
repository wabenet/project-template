.PHONY: all
all: clean test build lint

.PHONY: clean
clean:
	rm -rf ./dist c.out coverage.txt

.PHONY: fmt
fmt:
	go fmt ./...

.PHONY: update
update:
	go list -f '{{ '{{' }}if not (or .Main .Indirect){{ '}}' }}{{ '{{' }}.Path{{ '}}' }}{{ '{{' }}end{{ '}}' }}' -m all | xargs --no-run-if-empty go get
	go mod tidy

.PHONY: lint
lint:
	golangci-lint run

.PHONY: test
test:{% if protobuf %} api{% endif %}
	go test -race -cover ./...

.PHONY: coverage-report
coverage-report:
	cc-test-reporter before-build
	go test -race -coverprofile=coverage.txt -covermode=atomic -coverpkg=./... ./...
	cp coverage.txt c.out
	cc-test-reporter after-build -t gocov -p $(go list -m)

.PHONY: build
build:{% if protobuf %} api{% endif %}
	{%- if binary %}
	goreleaser build --snapshot --clean
	{%- endif %}

{%- if binary %}

.PHONY: release
release:
	goreleaser release --clean
{%- endif %}

{%- if protobuf %}

.PHONY: api
api: $(shell find api -name *.proto | sed 's|\.proto|.pb.go|g' | xargs)

%.pb.go: %.proto
	protoc -I ./api --go_out=. --go_opt=module={{ github_url }} $<
	protoc -I ./api --go-grpc_out=. --go-grpc_opt=module={{ github_url }} $<
{%- endif %}
